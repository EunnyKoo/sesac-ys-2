<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>동적 폼 전송</title>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <!-- 아래 cdn은 axios 사용을 위한 것 -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
      }
      .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }

      form {
        max-width: 400px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      input[type="text"],
      select {
        width: 90%;
        padding: 10px;
        margin: 5px 0;
        border: 1px solid #ccc;
        border-radius: 3px;
        font-size: 16px;
      }

      fieldset {
        border: 1px solid #ccc;
        border-radius: 3px;
        margin: 10px 0;
        padding: 10px;
      }

      legend {
        font-weight: bold;
      }

      input[type="radio"],
      input[type="checkbox"] {
        margin-right: 5px;
      }

      button {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
      }

      #result {
        margin-top: 20px;
      }

      /* Style the labels for radio and checkbox inputs */
      label {
        font-size: 16px;
      }

      /* Style for the legend in the interest fieldset */
      fieldset legend {
        font-weight: bold;
        font-size: 18px;
      }
    </style>
  </head>
  <body>
    <div class="container">
    <form name="register">
      <input type="text" name="name" placeholder="이름" required />
      <fieldset>
          <legend>성별</legend>
          <input type="radio" name="gender" value="여자" id="women" />
          <label for="women">여자</label>
          <input type="radio" name="gender" value="남자" id="men" />
          <label for="men">남자</label>
      </fieldset>
      <fieldset>
          <legend>생년월일</legend>
          <select name="year" required>
            <% for(let i = 2023; i >= 1970; i-- ) { %>
            <option value="<%=i%>"><%=i%></option>
            <% } %>
          </select>
          <select name="month" required>
            <% for(let i = 1; i <= 12; i++ ) { %>
            <option value="<%=i%>"><%=i%></option>
            <% } %>
          </select>
          <select name="day" required>
            <% for(let i = 1; i <= 31; i++ ) { %>
            <option value="<%=i%>"><%=i%></option>
            <% } %>
          </select>
      </fieldset>
      <fieldset>
          <legend>관심사</legend>
          <input type="checkbox" name="interest" value="여행" id="travel" />
          <label for="travel">여행</label>
          <input type="checkbox" name="interest" value="패션" id="fashion" />
          <label for="fashion">패션</label>
          <input type="checkbox" name="interest" value="음식" id="food" />
          <label for="food">음식</label>
      </fieldset>
        <button type="button" onclick="axiosLoginGet()">회원가입</button>
    </form>
    <h3 id="result"></h3>
  </div>
    <script>
      function getData() {
        const form = document.forms["register"];

        if (!form.checkValidity()) { 
          form.reportValidity(); 
          return;
        }

        const data = {
          name: form.name.value,
          gender: form.gender.value,
          year: form.year.value,
          month: form.month.value,
          day: form.day.value,
          interest: Array.from(form.querySelectorAll('input[name="interest"]:checked')).map(item => item.value)
        }

        return data;
      }

      function axiosLoginGet() {
        const data = getData();
        if (!data) return;

        // axios 함수는 promise 객체를 return
        axios({
          method: "POST",
          url: "/user/register",
          params: data // get 요청으로 데이터 보낼 때 params 사용
          // params 대신 url에 query를 직접 작성해도 됨
        }).then((res) => {
          // 서버에서 보내준 응답이 res에 담김
          console.log("res", res)
          console.log("res.data", res.data)
          const {
            name
          } = res.data

          $("#result").html(`회원가입 성공 ${name}님 환영합니다.`)
        })
      }
    </script>
  </body>
</html>